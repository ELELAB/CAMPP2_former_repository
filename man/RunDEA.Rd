% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Run_DEA.R
\name{RunDEA}
\alias{RunDEA}
\title{A wrapper for differential expression/abundance analysis}
\usage{
RunDEA(
  data,
  metadata = NULL,
  group,
  batch = NULL,
  covarDEA = NULL,
  cutoff.logFC = 1,
  cutoff.FDR = 0.01,
  prefix,
  block = NULL
)
}
\arguments{
\item{data}{a raw feature count matrix from "seq", "array", "ms" or "other"
technology (with feature IDs as row names and sample IDs as columns). It's
recommended to import feature counts using function "import_counts".}

\item{metadata}{a samples' metadata table should be imported using function
"import_metadata". Metadata must include exactly the same samples as gene
counts (data) and samples must be sorted similarly. In this function,
metadata are optional and are used to extract covariates for each sample.
Default = NULL.}

\item{group}{a factor specifying group for each sample (e.g. could be
represented by a column from a metadata file)}

\item{batch}{a factor specifying batch for each sample (e.g. could be
represented by a column from a metadata file). Default = NULL.}

\item{covarDEA}{a character vector of covariate(s) to include in the analysis.
covarDEA can be defined only together with a batch parameter (which
represents one of the covariates). Default = NULL.}

\item{cutoff.logFC}{A cutoff value for the logarithmic fold change applied
to each feature. Default = 1.}

\item{cutoff.FDR}{a cutoff value for the false discovery rate (corrected
p-value) applied to each feature. Default = 0.01.}

\item{prefix}{a character vector defining prefix of output file name.}

\item{block}{a factor specifying blocking variable. The block must be of
the same length as data and contain 2 or more options (e.g. could be
represented by a column from a metadata file). Default = NULL.}
}
\value{
a list of:
1) re-formatted matrix of differential expression/abundance results from
limma.
2) original results (a list) from limma
3) a character vector with unique feature names
}
\description{
A wrapper for differential expression/abundance analysis
}
